#!/usr/bin/env python2

u"""
  %prog [new|update] [OPTIONS]

  This program creates and updates a review request with a diff.

  The diff can either be generated by this program or generated separately and
  specified as input with the --diff (-d) option. If generated by this program,
  it is either from committed content (default) or from uncommitted content.
  Option --uncommitted is used for the latter purpose.

  The generated diff depends on options --base-url (-b) and --branch-url (-u).
  Option --branch-url is either a working copy path or a URL[@revision] and
  defaults to ".". Option --base-url is a URL and defaults to the parent branch
  of the branch specified by --branch-url. For both options, if subdirectories
  are referred to, the branch root will be used instead. An exception to this
  is when --branch-url is used with --uncommitted, then the diff is generated
  from the directory which --branch-url points to.

  Examples:
    $ %prog

    Starts a simple interactive mode for creating/updating review requests.
    Note! Only works when current working directory is a working copy.

    $ %prog new

    Creates a new review request. A file with default review configuration is
    created and used. ID of the new review is saved to this file.
    Note! Only works when current working directory is a working copy.

    $ %prog new --uncommitted

    Like "%prog new" but the generated diff will cover uncommitted changes on
    the current working copy.

    $ %prog update

    Updates a review request. The ID to be used is expected to be found in the
    review configuration file saved when "%prog new" was run.
    Note! Only works when current working directory is a working copy.

    $ %prog new -c my.reviewconfig -u <BRANCH_URL>

    Creates new review request(s). If the review configuration file specified
    by --config (-c) option exists, it is loaded. If the file does not exist,
    it is created with a default configuration. When done, ID(s) of the new
    review(s) are saved back to the file.

    $ %prog update -c my.reviewconfig -u <BRANCH_URL>

    Updates review request(s). The ID(s) to be used are expected to be found in
    the specified review configuration file.


Review config file:
  When starting a new review, a default review configuration file is typically
  created by the %prog tool, unless an existing file, defined by the user,
  is given as argument.

  The review configuration is a file that is read line by line. Comments and
  empty lines are ignored.

  The default review configuration is a single request for a new review which
  will include all files to be reviewed in it.

  The %prog tool is able to divide the content of the diff into several parts
  and post a review request for each part. Files in each part are included or
  excluded depending on filter(s) configured in the configuration file by the
  user.

  Syntax:

  A review definition starts on a new line. The first field on the line is
  either a number or the keyword "new". If it's a number, it's a Review Board
  ID of an existing review. Keyword "new" will create a new review request.

  The rest of the line is filter arguments that must be valid to be passed to
  the filterdiff tool. The filter arguments can be continued on the next line
  by ending the line with a '\\' character. See the examples below.

  The filters are specified as patterns to be matched against the file paths
  in the diff. Use -i for each pattern to include and -x for each pattern to
  exclude.

  Example:

    # Add all paths, then remove those matching hal/*.
    new -x hal/*
    # Add all paths matching platform/*, then remove those matching \
*README.mmd.
    12345 -i platform/* -x *README.mmd
    # A review defined using multiple rows.
    new \\
      -i hal/server/* \\
      -i hal/client/* \\
      -x *README.mmd

  The above will create two new reviews and update an existing review with
  ID 12345. After the new reviews have been posted to the Review Board,
  the %prop tool will automatically edit the configuration file to replace
  the "new" keywords with the proper review ID(s).
"""

import sys
from os.path import dirname, realpath
sys.path.insert(0, dirname(realpath(__file__)) + "/../lib")
from review.svn.main import main

main(__doc__)
