<cconfiguration id="cdt.managedbuild.toolchain.gnu.base.${TARGET}${TFSEPARATOR}${FLAVOUR}">
  <storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="cdt.managedbuild.toolchain.gnu.base.${TARGET}${TFSEPARATOR}${FLAVOUR}" moduleId="org.eclipse.cdt.core.settings" name="${TARGET}${TFSEPARATOR}${FLAVOUR}">
    <externalSettings/>
    <extensions>
      <extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
      <extension id="org.eclipse.cdt.core.MakeErrorParser" 
                 point="org.eclipse.cdt.core.ErrorParser"/>
      <extension id="org.eclipse.cdt.core.GCCErrorParser"
                 point="org.eclipse.cdt.core.ErrorParser"/>
      <extension id="org.eclipse.cdt.core.GASErrorParser" 
                 point="org.eclipse.cdt.core.ErrorParser"/>
      <extension id="org.eclipse.cdt.core.GLDErrorParser" 
                 point="org.eclipse.cdt.core.ErrorParser"/>
    </extensions>
  </storageModule>
  <storageModule moduleId="cdtBuildSystem" version="4.0.0">
    <configuration artifactName="${TARGET}${TFSEPARATOR}${FLAVOUR}" buildProperties="" description="" 
                   id="cdt.managedbuild.toolchain.gnu.base.${TARGET}${TFSEPARATOR}${FLAVOUR}" name="${TARGET}${TFSEPARATOR}${FLAVOUR}"
                   parent="org.eclipse.cdt.build.core.emptycfg">
      <folderInfo id="cdt.managedbuild.toolchain.gnu.base.${TARGET}${TFSEPARATOR}${FLAVOUR}.root" name="/" 
                  resourcePath="">
        <toolChain id="cdt.managedbuild.toolchain.gnu.base.${TARGET}${TFSEPARATOR}${FLAVOUR}.toolchain" 
                   name="cdt.managedbuild.toolchain.gnu.base" 
                   resourceTypeBasedDiscovery="false" 
                   superClass="cdt.managedbuild.toolchain.gnu.base">
          <targetPlatform archList="all" binaryParser="org.eclipse.cdt.core.ELF" 
                          id="cdt.managedbuild.target.gnu.platform.base.targetplatform" 
                          name="${TARGET}${TFSEPARATOR}${FLAVOUR}" osList="linux,hpux,aix,qnx" 
                          superClass="cdt.managedbuild.target.gnu.platform.base"/>
          <builder autoBuildTarget="VERBOSE=1 TARGET=${TARGET} FLAVOUR=${FLAVOUR} local_all"
                   cleanBuildTarget="local_clean" enableAutoBuild="false"
                   id="cdt.managedbuild.target.gnu.builder.base.${TARGET}${TFSEPARATOR}${FLAVOUR}.builder" 
                   incrementalBuildTarget="VERBOSE=1 TARGET=${TARGET} FLAVOUR=${FLAVOUR} local_all"
                   keepEnvironmentInBuildfile="false" managedBuildOn="false" 
                   name="KreaTV makesystem" parallelBuildOn="true" 
                   parallelizationNumber="8" 
                   superClass="cdt.managedbuild.target.gnu.builder.base">
            <outputEntries>
              <entry flags="VALUE_WORKSPACE_PATH" kind="outputPath" name="${TARGET}${TFSEPARATOR}${FLAVOUR}"/>
            </outputEntries>
          </builder>
          <tool id="cdt.managedbuild.tool.gnu.archiver.base.${TARGET}${TFSEPARATOR}${FLAVOUR}" name="GCC Archiver"
                superClass="cdt.managedbuild.tool.gnu.archiver.base"/>
          <tool id="cdt.managedbuild.tool.gnu.cpp.compiler.base.${TARGET}${TFSEPARATOR}${FLAVOUR}" 
                name="GCC C++ Compiler" 
                superClass="cdt.managedbuild.tool.gnu.cpp.compiler.base">
            <option id="gnu.cpp.compiler.option.include.paths.${TARGET}${TFSEPARATOR}${FLAVOUR}"
                    superClass="gnu.cpp.compiler.option.include.paths" 
                    valueType="includePath">
              ${INCLUDES}
            </option>
            <option id="gnu.cpp.compiler.option.preprocessor.def.${TARGET}${TFSEPARATOR}${FLAVOUR}"
                    superClass="gnu.cpp.compiler.option.preprocessor.def" 
                    valueType="definedSymbols">
              ${SYMBOLS}
            </option>
            <inputType id="cdt.managedbuild.tool.gnu.cpp.compiler.input.${TARGET}${TFSEPARATOR}${FLAVOUR}" 
                       superClass="cdt.managedbuild.tool.gnu.cpp.compiler.input"/>
          </tool>
          <tool id="cdt.managedbuild.tool.gnu.c.compiler.base.${TARGET}${TFSEPARATOR}${FLAVOUR}" 
                name="GCC C Compiler" 
                superClass="cdt.managedbuild.tool.gnu.c.compiler.base">
            <option id="gnu.c.compiler.option.include.paths.${TARGET}${TFSEPARATOR}${FLAVOUR}" 
                    superClass="gnu.c.compiler.option.include.paths" 
                    valueType="includePath">
              ${INCLUDES}
            </option>
            <option id="gnu.c.compiler.option.preprocessor.def.symbols.${TARGET}${TFSEPARATOR}${FLAVOUR}" 
                    superClass="gnu.c.compiler.option.preprocessor.def.symbols" 
                    valueType="definedSymbols">
              ${SYMBOLS}
            </option>
            <inputType id="cdt.managedbuild.tool.gnu.c.compiler.input.${TARGET}${TFSEPARATOR}${FLAVOUR}" 
                       superClass="cdt.managedbuild.tool.gnu.c.compiler.input"/>
          </tool>
          <tool id="cdt.managedbuild.tool.gnu.c.linker.base.${TARGET}${TFSEPARATOR}${FLAVOUR}" 
                name="GCC C Linker" superClass="cdt.managedbuild.tool.gnu.c.linker.base"/>
          <tool id="cdt.managedbuild.tool.gnu.cpp.linker.base.${TARGET}${TFSEPARATOR}${FLAVOUR}" 
                name="GCC C++ Linker" 
                superClass="cdt.managedbuild.tool.gnu.cpp.linker.base">
            <inputType id="cdt.managedbuild.tool.gnu.cpp.linker.input.${TARGET}${TFSEPARATOR}${FLAVOUR}" 
                       superClass="cdt.managedbuild.tool.gnu.cpp.linker.input">
              <additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
              <additionalInput kind="additionalinput" paths="$(LIBS)"/>
            </inputType>
          </tool>
          <tool id="cdt.managedbuild.tool.gnu.assembler.base.${TARGET}${TFSEPARATOR}${FLAVOUR}" 
                name="GCC Assembler" superClass="cdt.managedbuild.tool.gnu.assembler.base">
            <option id="gnu.both.asm.option.include.paths.${TARGET}${TFSEPARATOR}${FLAVOUR}" 
                    superClass="gnu.both.asm.option.include.paths" valueType="includePath">
              ${INCLUDES}
            </option>
            <inputType id="cdt.managedbuild.tool.gnu.assembler.input.${TARGET}${TFSEPARATOR}${FLAVOUR}" 
                       superClass="cdt.managedbuild.tool.gnu.assembler.input"/>
          </tool>
        </toolChain>
      </folderInfo>
      <sourceEntries>
        <entry excluding="${EXCLUDES}"
               flags="VALUE_WORKSPACE_PATH|RESOLVED" kind="sourcePath" name=""/>
      </sourceEntries>
    </configuration>
  </storageModule>
  <storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
  <storageModule moduleId="org.eclipse.cdt.core.language.mapping"/>
  <storageModule moduleId="org.eclipse.cdt.internal.ui.text.commentOwnerProjectMappings">
    <doc-comment-owner id="org.eclipse.cdt.internal.ui.text.doctools.NullDocCommentOwner">
      <path value=""/>
    </doc-comment-owner>
  </storageModule>
  <storageModule moduleId="scannerConfiguration">
  ${SCANNER}
  </storageModule>
  <storageModule moduleId="org.eclipse.cdt.make.core.buildtargets">
    <buildTargets>
      <target name="make" path="" targetID="org.eclipse.cdt.build.MakeTargetBuilder">
        <buildCommand>make</buildCommand>
        <buildArguments>-j8</buildArguments>
        <buildTarget/>
        <stopOnError>true</stopOnError>
        <useDefaultCommand>true</useDefaultCommand>
        <runAllBuilders>true</runAllBuilders>
      </target>
    </buildTargets>
    <buildTargets>
      <target name="make local_all" path="" targetID="org.eclipse.cdt.build.MakeTargetBuilder">
        <buildCommand>make local_all</buildCommand>
        <buildArguments>-j8</buildArguments>
        <buildTarget>local_all</buildTarget>
        <stopOnError>true</stopOnError>
        <useDefaultCommand>true</useDefaultCommand>
        <runAllBuilders>true</runAllBuilders>
      </target>
    </buildTargets>
  </storageModule>
</cconfiguration>
